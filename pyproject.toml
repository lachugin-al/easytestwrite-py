[tool.poetry]
name = "mobile-automation"
version = "0.1.0"
description = "Mobile app automation: pytest + Appium v3"
authors = ["Anton Lachugin <anton.lachugin.l@gmail.com>"]
packages = [{ include = "mobiauto", from = "src" }]

[tool.poetry.dependencies]
python = "^3.13"
pytest = "^8.3"
pytest-xdist = "^3.6"
pytest-rerunfailures = "^14.0"
allure-pytest = "^2.13"
pydantic = "^2.7"
pydantic-settings = "^2.5"
appium-python-client = "^4.0"
structlog = "^24.4"
tenacity = "^9.0"
typer = "^0.12"
PyYAML = "^6.0"
mitmproxy = "^11.0"
types-pyyaml = "^6.0.12"

[tool.poetry.group.dev.dependencies]
black = "^24.8"
isort = "^5.13"
ruff = "^0.6"
mypy = "^1.11"
pytest-cov = "^7.0.0"
pre-commit = "^4.3.0"

[tool.pytest.ini_options]
addopts = "-q --strict-markers --cov=mobiauto --cov-report=term-missing"
markers = [
    "android: run on Android",
    "ios: run on iOS",
    "smoke: fast build-verifier suite",
]

[tool.poetry.scripts]
mobiauto = "mobiauto.runner.main:app"

# ------------------------------
# Formatting / Lint
# ------------------------------

[tool.black]
line-length = 100
target-version = ["py313"]
include = "\\.pyi?$"
exclude = """
/(
    \\.venv
  | build
  | dist
  | .coverage_html
)/
"""

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["mobiauto"]
src_paths = ["src", "tests"]
skip = [".venv", "build", "dist", ".coverage_html"]

[tool.ruff]
# Общие настройки
line-length = 100
target-version = "py313"
src = ["src", "tests"]
exclude = [".venv", "build", "dist", ".coverage_html"]

[tool.ruff.lint]
# Набор правил: pyflakes/pycodestyle, isort, bugbear, модернизации, и т.п.
select = [
    "E",   # pycodestyle (errors)
    "F",   # pyflakes
    "I",   # isort (imports)
    "B",   # bugbear
    "C4",  # comprehensions
    "UP",  # pyupgrade
    "N",   # naming
    "A",   # builtins
    "T20", # print
    "W",   # pycodestyle (warnings)
]
ignore = [
    "E501",   # длина строки контролируем Black'ом
]

[tool.ruff.lint.isort]
known-first-party = ["mobiauto"]

# ------------------------------
# MyPy (static typing)
# ------------------------------

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unreachable = true
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
pretty = true
show_error_codes = true

# Внешние пакеты без типингов - не валим билд
ignore_missing_imports = true

# Послабления для tests/*
[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
check_untyped_defs = false

# ------------------------------
# Coverage (в pyproject вместо .coveragerc)
# ------------------------------

[tool.coverage.run]
branch = true
source = ["mobiauto"]
omit = [
    "*/__init__.py",
    "*/pytest_plugin/*",
    "*/runner/*",
    "*/reporting/video.py",
]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "except ImportError",
    "if __name__ == .__main__.:",
]
